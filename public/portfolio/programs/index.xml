<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Projetos menores on SomVezzo</title>
    <link>https://som-vezzo.me/portfolio/programs/</link>
    <description>Recent content in Projetos menores on SomVezzo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pt-br</language>
    <lastBuildDate>Wed, 21 Dec 2022 14:08:54 -0300</lastBuildDate><atom:link href="https://som-vezzo.me/portfolio/programs/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Golang simple form</title>
      <link>https://som-vezzo.me/portfolio/programs/simple-form/</link>
      <pubDate>Thu, 19 Jan 2023 14:56:15 -0300</pubDate>
      
      <guid>https://som-vezzo.me/portfolio/programs/simple-form/</guid>
      <description>Golang simple form func main() { pl(&amp;#34;Hello! Do you wish to fill this form? Y/N&amp;#34;) sc(&amp;amp;consign); p(&amp;#34;\n&amp;#34;) if !(consign == &amp;#34;Y&amp;#34; || consign == &amp;#34;y&amp;#34; || consign == &amp;#34;N&amp;#34; || consign == &amp;#34;n&amp;#34;) { pl(err) main() } switch consign { case &amp;#34;Y&amp;#34;,&amp;#34;y&amp;#34;: dataGet() case &amp;#34;N&amp;#34;,&amp;#34;n&amp;#34;: pl(&amp;#34;Alright, have a nice day!&amp;#34;) os.Exit(0) } } Esse é um programa muito simples que escrevi em Golang, como um exercício prático de aprendizado da linguagem.</description>
    </item>
    
    <item>
      <title>OscMusicPlayer.scd - WIP</title>
      <link>https://som-vezzo.me/portfolio/programs/osc-music-player/</link>
      <pubDate>Sat, 24 Dec 2022 18:58:55 -0300</pubDate>
      
      <guid>https://som-vezzo.me/portfolio/programs/osc-music-player/</guid>
      <description>OscMusic player Esse é um trabalho em andamento.
O OscMusic player se trata de uma interface e instrumento virtual, para se criar &amp;ldquo;música de osciloscópio&amp;rdquo; (em inglês, oscilloscope music).
SynthDef(\xyzSin, { var sig, env, hz; env = Env.asr(0.1, 1, 0.2).kr(2, \gate.kr(1)); sig = SinOsc.ar(\freq.kr(~hzs[0]), [\ph0.kr(~ph0[0]), \ph1.kr(~ph1[0])], env); sig = Pan2.ar(sig, [\pan0.kr(~pan0[0]), \pan1.kr(~pan1[0])], \amp.kr(~amps[0])); Out.ar(\out.kr(0), sig) }).add; Código completo.</description>
    </item>
    
    <item>
      <title>Prime-number-gen.sc</title>
      <link>https://som-vezzo.me/portfolio/programs/prime-number-gen/</link>
      <pubDate>Fri, 23 Dec 2022 09:41:36 -0300</pubDate>
      
      <guid>https://som-vezzo.me/portfolio/programs/prime-number-gen/</guid>
      <description>Gerador de números primos Essa é uma extensão que programei para o SuperCollider, se trata de um método de criação de listas, que preenche uma lista somente com números primos, e seus únicos dois argumentos são o tamanho da lista, e o número de partida.
E essa aqui é a versão anterior, antes de eu descobrir que existia um método nativo que identifica se um número é primo ou não&amp;hellip;</description>
    </item>
    
    <item>
      <title>OrbitAz.sc</title>
      <link>https://som-vezzo.me/portfolio/programs/orbitaz/</link>
      <pubDate>Fri, 23 Dec 2022 09:20:56 -0300</pubDate>
      
      <guid>https://som-vezzo.me/portfolio/programs/orbitaz/</guid>
      <description>orbitAz.sc - Espacializador circular OrbitAz é uma extensão que criei à biblioteca de classes do SuperCollider. Se trata de uma pseudo-classe, e sua principal função é trabalhar a espacialização de forma circular (especialmente perceptível em instalações sonoras com 3+ canais/amplificadores, em que o ouvinte consegue perceber nitidamente o som circulando ao redor).
É uma funcionalidade que utilizei muitas vezes em minhas performances, especialmente com o instrumento drone.
A extensão e sua documentação Pode-se observar no código que o efeito é resultado da junção do espacializador multicanal padrão - PanAz - com um envelope circular - Env.</description>
    </item>
    
    <item>
      <title>Drone.scd</title>
      <link>https://som-vezzo.me/portfolio/programs/drone/</link>
      <pubDate>Sat, 17 Dec 2022 22:49:17 -0300</pubDate>
      
      <guid>https://som-vezzo.me/portfolio/programs/drone/</guid>
      <description>Drone.scd - Instrumento virtual e interface O instrumento virtual \drone se trata de um sintetizador que programei em SuperCollider (sclang), e que se aproveita do efeito acústico das formantes, ou frequências de ressonância - simplificadamente, a ênfase de algum harmônico dentro de um som complexo.
A principal classe em sua construção, e que é a base da sua sonoridade, é a Formant.ar, que como o nome sugere, cria esse som complexo onde é possível definir a formante, e também o tamanho da banda de ressonância.</description>
    </item>
    
  </channel>
</rss>
